#!/bin/sh
#
# The hook should exit with non-zero status after issuing
# an appropriate message if it wants to stop the commit.

if git rev-parse --verify HEAD >/dev/null 2>&1; then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If there are whitespace errors, print the offending file names and fail.
git diff-index --check --cached $against -- 1>&2
[[ $? != "0" ]] && echo -e "\033[0;31mThis commit contains whitespace issues!\033[0m"

# Usefull hooks for Gnome Shell Extensions

# Fix environment of githooks
unset GIT_DIR

# Allow to read user input below, assigns stdin to keyboard
exec < /dev/tty

# Iterate through folders with a metadata.json
for path in $(git diff --name-only --cached); do
	if [[ "${path}" =~ .*/metadata.json$ ]]; then
		echo -e "\033[1;32m==>\e[39;1m Entering ${path%/metadata.json}...\e[0m"

		# Ask whether creating a zip file is desired
		zip_cmd="zip -FSr ../${path%/metadata.json}.zip ."
		echo -en "\e[34;1m  ->\e[39;1m Do you want to zip ${path%/metadata.json} using '${zip_cmd}'? [Y/n] \e[0m"
		read -n1 user_input
		echo
		if [[ ${user_input} =~ (Y|y) ]]; then
			(cd ${path%/metadata.json} && ${zip_cmd})
			# Ask to abort the commit in case the build fails
			if [[ $? != 0 ]]; then
				echo -en "\n\e[34;1m  ->\e[39;1m A failure occured while zipping ${path%/metadata.json}. Do you want to abort this commit? [Y/n] \e[0m"
				read -n1 user_input_two
				echo
				if [[ ${user_input_two} =~ (Y|y) ]]; then
					exit 2
				fi
			else
				echo
			fi
		fi
		unset user_input
	fi
done
